#include <stdio.h>

#include <stdlib.h>

 

// Definição da estrutura Funcionario

typedef struct {

    char nome[100];

    int idade;

    float salario;

} Funcionario;

 

// Função de comparação para ordenar funcionários por idade

int compararIdade(const void *a, const void *b) {

    Funcionario *funcA = (Funcionario *)a;

    Funcionario *funcB = (Funcionario *)b;

    return funcA->idade - funcB->idade;

}

 

// Função para exibir o array de funcionários

void exibirFuncionarios(Funcionario *funcionarios, int n) {

    for (int i = 0; i < n; i++) {

        printf("Nome: %s, Idade: %d, Salário: %.2f\n", funcionarios[i].nome, funcionarios[i].idade, funcionarios[i].salario);

    }

}

 

int main() {

    int n;

 

    // Solicita o número de funcionários

    printf("Digite o número de funcionários: ");

    scanf("%d", &n);

    getchar(); // Limpa o buffer de entrada

 

    Funcionario funcionarios[n];

 

    // Leitura dos dados dos funcionários

    for (int i = 0; i < n; i++) {

        printf("\nDigite os dados do funcionário %d:\n", i + 1);

        printf("Nome: ");

        fgets(funcionarios[i].nome, sizeof(funcionarios[i].nome), stdin);

        funcionarios[i].nome[strcspn(funcionarios[i].nome, "\n")] = 0; // Remove o caractere de nova linha

 

        printf("Idade: ");

        scanf("%d", &funcionarios[i].idade);

 

        printf("Salário: ");

        scanf("%f", &funcionarios[i].salario);

        getchar(); // Limpa o buffer de entrada

    }

 

    // Ordenação dos funcionários por idade

    qsort(funcionarios, n, sizeof(Funcionario), compararIdade);

 

    // Exibição dos funcionários ordenados

    printf("\nFuncionários ordenados por idade:\n");

    exibirFuncionarios(funcionarios, n);

 

    return 0;

}
